/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 qb.glb --transform 
Files: qb.glb [137.41KB] > C:\Users\kirkl\Desktop\202406\qb-transformed.glb [18.46KB] (87%)
*/

import React, { useRef, useState } from "react";

import { BallCollider, RigidBody, vec3 } from "@react-three/rapier";
import { BlockEmpty } from "./BlockEmpty";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { Coin } from "./items/Coin";
import { Mushroom } from "./items/Mushroom";
import { useFrame } from "@react-three/fiber";
import { PositionalAudio, useGLTF } from "@react-three/drei";

export const QuestionBlock = ({ pos, mushroom }) => {
  const { nodes, materials } = useGLTF("models/qb-transformed.glb");
  const group = useRef();

  return (
    <>
      <RigidBody type="fixed">
        <group position={pos} ref={group}>
          <mesh
            castShadow
            geometry={nodes.BlockQuestion__BlockQuestionMat00020.geometry}
            material={materials.BlockQuestionMat00}
            // position={[70.562, 9.136, 0]}
          />
          <mesh
            castShadow
            geometry={nodes.BlockQuestion__BlockQuestionMat01020.geometry}
            material={materials.BlockQuestionMat01}
            // position={[70.562, 9.136, 0]}
          />
        </group>
      </RigidBody>
    </>
  );
};

// export function QuestionBlock(props) {
//   const { nodes, materials } = useGLTF("models/qb-transformed.glb");
//   return (
//     <RigidBody type="fixed" >
//       <group {...props} dispose={null}>
//         <mesh
//           castShadow
//           geometry={nodes.BlockQuestion__BlockQuestionMat00020.geometry}
//           material={materials.BlockQuestionMat00}
//         />
//         <mesh
//           castShadow
//           geometry={nodes.BlockQuestion__BlockQuestionMat01020.geometry}
//           material={materials.BlockQuestionMat01}
//         />
//       </group>
//     </RigidBody>
//   );
// }

useGLTF.preload("models/qb-transformed.glb");
